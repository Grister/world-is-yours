version: '3'

services:
  db:
    image: postgres:15.5
    container_name: db
    environment:
      POSTGRES_DB: world_is_yours
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d world_is_yours" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G

  django-backend:
    build: ./
    container_name: django-backend
    command: bash -c "python manage.py migrate && python manage.py runscript load_all_fixtures && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./store:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - default


  redis-server:
    image: redis:7.4
    container_name: redis-server
    ports:
      - "6379:6379"
    volumes:
      - /path/to/local/data:/root/redis
      - /path/to/local/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=password
      - REDIS_PORT=6379
      - REDIS_DATABASES=16
    networks:
      - default
    restart: unless-stopped

  celery:
    build: ./
    command: celery -A store worker -l info
    volumes:
      - .:/store
    depends_on:
      - redis-server

  stripe-cli:
    image: stripe/stripe-cli:v1.19.1
    environment:
      STRIPE_API_KEY: sk_test_51MEFcVLuDZka6EPF6oucetUqAPDxoNRyI7zHQ4nyGVVbdScCV9xCwiRNyjcBFvL1YlI0FsGLfhs20vxhghqAus2o00yQysgABt
      STRIPE_DEVICE_NAME: stripe-cli
    command:
      listen --forward-to django-backend:8000/api/webhook/stripe/
    networks:
      - default

networks:
  default:
    driver: bridge
  inbound:
    external: true

volumes:
  postgres_data: